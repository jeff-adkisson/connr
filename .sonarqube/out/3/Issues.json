{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-3.23524.11 (f43cd10b)",
        "semanticVersion": "4.8.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Pages_Error_cshtml.g.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 232,
                  "endLine": 54,
                  "endColumn": 234
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Pages_Error_cshtml.g.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 232,
                  "endLine": 69,
                  "endColumn": 234
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Pages_Error_cshtml.g.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 234,
                  "endLine": 97,
                  "endColumn": 236
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Pages__Host_cshtml.g.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 232,
                  "endLine": 63,
                  "endColumn": 234
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Pages__Host_cshtml.g.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 237,
                  "endLine": 83,
                  "endColumn": 239
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Pages__Host_cshtml.g.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 245,
                  "endLine": 134,
                  "endColumn": 247
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Pages__Host_cshtml.g.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 246,
                  "endLine": 150,
                  "endColumn": 248
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0169",
          "level": "warning",
          "message": "The field 'Pages_Error.__tagHelperStringValueBuffer' is never used",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Pages_Error_cshtml.g.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 24,
                  "endLine": 31,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0169",
          "level": "warning",
          "message": "The field 'Pages__Host.__tagHelperStringValueBuffer' is never used",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "Microsoft.NET.Sdk.Razor.SourceGenerators/Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator/Pages__Host_cshtml.g.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 24,
                  "endLine": 38,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_logger' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Pages/Error.cshtml.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 42,
                  "endLine": 11,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4502",
          "level": "warning",
          "message": "Make sure disabling CSRF protection is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Pages/Error.cshtml.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 2,
                  "endLine": 8,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Layouts/StopAll.razor.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 22,
                  "endLine": 6,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Layouts/StopAll.razor.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 22,
                  "endLine": 6,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Layouts/StopAll.razor.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 22,
                  "endLine": 42,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Layouts/StopAll.razor.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 22,
                  "endLine": 42,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'StopAll' or mark the type as 'sealed'.",
              "1": "'StopAll.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'.",
              "2": "'StopAll.Dispose()' should be 'public'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Shared/OutputWindow.razor.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 22,
                  "endLine": 11,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Shared/OutputWindow.razor.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 22,
                  "endLine": 11,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Shared/OutputWindow.razor.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 22,
                  "endLine": 85,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Shared/OutputWindow.razor.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 22,
                  "endLine": 85,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'OutputWindow' or mark the type as 'sealed'.",
              "1": "'OutputWindow.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'.",
              "2": "'OutputWindow.Dispose()' should be 'public'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Components/RelatedPorts.razor.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 22,
                  "endLine": 12,
                  "endColumn": 34
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Components/RelatedPorts.razor.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 22,
                  "endLine": 12,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Components/RelatedPorts.razor.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 22,
                  "endLine": 29,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Components/RelatedPorts.razor.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 22,
                  "endLine": 29,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'RelatedPorts' or mark the type as 'sealed'.",
              "1": "'RelatedPorts.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'.",
              "2": "'RelatedPorts.Dispose()' should be 'public'."
            }
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'MaxOutputLength'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Components/CommandRunner.razor.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 5,
                  "endLine": 11,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Components/CommandRunner.razor.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 22,
                  "endLine": 9,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Components/CommandRunner.razor.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 22,
                  "endLine": 9,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Components/CommandRunner.razor.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 17,
                  "endLine": 35,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'CommandRunner' or mark the type as 'sealed'.",
              "1": "'CommandRunner.Dispose()' should call 'Dispose(true)' and 'GC.SuppressFinalize(this)'."
            }
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change RelatedPorts.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Components/RelatedPorts.razor.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 22,
                  "endLine": 29,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change CommandRunner.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Components/CommandRunner.razor.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 17,
                  "endLine": 35,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2012",
          "level": "note",
          "message": "ValueTask instances returned from method calls should always be used, typically awaited. Not doing so often represents a functional bug, but even if it doesn't, it can result in degraded performance if the target method pools objects for use with ValueTasks.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Shared/OutputWindow.razor.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change OutputWindow.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Shared/OutputWindow.razor.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 22,
                  "endLine": 85,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 60
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 21,
                  "endLine": 48,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 25,
                  "endLine": 50,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 21,
                  "endLine": 59,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 25,
                  "endLine": 61,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 21,
                  "endLine": 70,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 25,
                  "endLine": 72,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 21,
                  "endLine": 81,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 25,
                  "endLine": 83,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 21,
                  "endLine": 92,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 25,
                  "endLine": 94,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 21,
                  "endLine": 103,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 25,
                  "endLine": 105,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 115,
                  "startColumn": 21,
                  "endLine": 115,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 25,
                  "endLine": 117,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 21,
                  "endLine": 127,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 25,
                  "endLine": 129,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "15": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+2 (incl 1 for nesting)",
              "8": "+1",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 23,
                  "endLine": 51,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 23,
                  "endLine": 62,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 23,
                  "endLine": 73,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 23,
                  "endLine": 84,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 23,
                  "endLine": 95,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 23,
                  "endLine": 106,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 23,
                  "endLine": 118,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Feature/Run.razor.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 23,
                  "endLine": 130,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change StopAll.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Layouts/StopAll.razor.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 22,
                  "endLine": 42,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Program.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 27,
                  "endLine": 28,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Program.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 27,
                  "endLine": 30,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(line => line.Value))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Shared/OutputWindow.razor",
                "region": {
                  "startLine": 11,
                  "startColumn": 31,
                  "endLine": 11,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'AddChildren' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/jeff/projects/connr/Connr.App/Components/ProcessTree.razor.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 18,
                  "endLine": 47,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1816": {
          "id": "CA1816",
          "shortDescription": "Dispose methods should call SuppressFinalize",
          "fullDescription": "A method that is an implementation of Dispose does not call GC.SuppressFinalize; or a method that is not an implementation of Dispose calls GC.SuppressFinalize; or a method calls GC.SuppressFinalize and passes something other than this (Me in Visual Basic).",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1816",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2012": {
          "id": "CA2012",
          "shortDescription": "Use ValueTasks correctly",
          "fullDescription": "ValueTasks returned from member invocations are intended to be directly awaited.  Attempts to consume a ValueTask multiple times or to directly access one's result before it's known to be completed may result in an exception or corruption.  Ignoring such a ValueTask is likely an indication of a functional bug and may degrade performance.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2012",
          "properties": {
            "category": "Reliability",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2254": {
          "id": "CA2254",
          "shortDescription": "Template should be a static expression",
          "fullDescription": "The logging message template should not vary between calls.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2254",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0169": {
          "id": "CS0169",
          "shortDescription": "Field is never used",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0169)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Async method lacks 'await' operators and will run synchronously",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "This rule raises an issue when a private/internal type or member is never referenced in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3358": {
          "id": "S3358",
          "shortDescription": "Ternary operators should not be nested",
          "fullDescription": "Nested ternaries are hard to read and can make the order of operations complex to understand.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3358",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "This rule raises an issue when the code cognitive complexity of a function is above a certain threshold.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields which are written but never read are a case of \"dead store\". Changing the value of such a field is useless and most probably indicates an error in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4502": {
          "id": "S4502",
          "shortDescription": "Disabling CSRF protections is security-sensitive",
          "fullDescription": "A cross-site request forgery (CSRF) attack occurs when a trusted user of a web application can be forced, by an attacker, to perform sensitive actions that he didn’t intend, such as updating his profile or sending a message, more generally anything that can change the state of the application.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4502",
          "properties": {
            "category": "Critical Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}